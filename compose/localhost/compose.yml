version: "3.9"

services:  
  server:
    image: nginx
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=Europe/London
      - URL=
      - VALIDATION=http 
      - SUBDOMAINS= #optional 
      - CERTPROVIDER= #optional 
      - DNSPLUGIN=cloudflare #optional 
      - PROPAGATION= #optional
      - EMAIL= #optional 
      - ONLY_SUBDOMAINS=false #optional 
      - EXTRA_DOMAINS= #optional
      - STAGING=false #optional 
    ports: 
      # - 443:443
      - 80:80
    volumes:
      - config:/config
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/public/:/var/www/public/
    restart: unless-stopped
    # depends_on:
    #   web:
    #     condition: service_healthy

  web:
    build:
      context: ../../
    env_file:
      - ./config/.env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 5s

  db:
    image: postgres
    restart: unless-stopped
    user: postgres
    env_file:
      - ./config/.env
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "chat" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes: 
      - db:/var/lib/postgresql/data

  cache:
    image: redis:7.2-alpine
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes: 
      - cache:/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - grafana:/var/lib/grafana

volumes:
  db:
    driver: local
  cache:
    driver: local
  config:
  grafana:
    driver: local
  prometheus:
    driver: local