version: "3.9"

services:  
  server:
    image: nginx
    environment: 
      - PUID=1000 
      - PGID=1000 
      - TZ=Europe/London
      - URL=
      - VALIDATION=http 
      - SUBDOMAINS= #optional 
      - CERTPROVIDER= #optional 
      - DNSPLUGIN=cloudflare #optional 
      - PROPAGATION= #optional
      - EMAIL= #optional 
      - ONLY_SUBDOMAINS=false #optional 
      - EXTRA_DOMAINS= #optional
      - STAGING=false #optional 
    ports: 
      # - 443:443
      - 80:80
    volumes:
      - config:/config
      - ./nginx/conf.d:/etc/nginx/conf.d
    restart: unless-stopped
    depends_on:
      - web

  web:
    build:
      context: ../
      target: final
    env_file:
      - ./config/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  db:
    image: postgres
    restart: unless-stopped
    env_file:
      - ./config/.env
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes: 
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres

  cache:
    image: redis:7.2-alpine
    restart: unless-stopped
    # ports:
    #   - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache:/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    # ports:
    #   - "9091:9090"
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    # ports:
    #   - '3000:3000'
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - grafana:/var/lib/grafana

volumes:
  db:
    driver: local
  cache:
    driver: local
  config:
  grafana:
    driver: local
  prometheus:
    driver: local